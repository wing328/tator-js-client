/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Tator);
  }
}(this, function(expect, Tator) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Tator.TatorApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TatorApi', function() {
    describe('addAttribute', function() {
      it('should call addAttribute successfully', function(done) {
        //uncomment below and update the code to test addAttribute
        //instance.addAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('algorithmLaunch', function() {
      it('should call algorithmLaunch successfully', function(done) {
        //uncomment below and update the code to test algorithmLaunch
        //instance.algorithmLaunch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloneMediaList', function() {
      it('should call cloneMediaList successfully', function(done) {
        //uncomment below and update the code to test cloneMediaList
        //instance.cloneMediaList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('completeUpload', function() {
      it('should call completeUpload successfully', function(done) {
        //uncomment below and update the code to test completeUpload
        //instance.completeUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAffiliation', function() {
      it('should call createAffiliation successfully', function(done) {
        //uncomment below and update the code to test createAffiliation
        //instance.createAffiliation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAnalysis', function() {
      it('should call createAnalysis successfully', function(done) {
        //uncomment below and update the code to test createAnalysis
        //instance.createAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAudioFile', function() {
      it('should call createAudioFile successfully', function(done) {
        //uncomment below and update the code to test createAudioFile
        //instance.createAudioFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAuxiliaryFile', function() {
      it('should call createAuxiliaryFile successfully', function(done) {
        //uncomment below and update the code to test createAuxiliaryFile
        //instance.createAuxiliaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBookmark', function() {
      it('should call createBookmark successfully', function(done) {
        //uncomment below and update the code to test createBookmark
        //instance.createBookmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBucket', function() {
      it('should call createBucket successfully', function(done) {
        //uncomment below and update the code to test createBucket
        //instance.createBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFavorite', function() {
      it('should call createFavorite successfully', function(done) {
        //uncomment below and update the code to test createFavorite
        //instance.createFavorite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFile', function() {
      it('should call createFile successfully', function(done) {
        //uncomment below and update the code to test createFile
        //instance.createFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFileType', function() {
      it('should call createFileType successfully', function(done) {
        //uncomment below and update the code to test createFileType
        //instance.createFileType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createImageFile', function() {
      it('should call createImageFile successfully', function(done) {
        //uncomment below and update the code to test createImageFile
        //instance.createImageFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInvitation', function() {
      it('should call createInvitation successfully', function(done) {
        //uncomment below and update the code to test createInvitation
        //instance.createInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createJobCluster', function() {
      it('should call createJobCluster successfully', function(done) {
        //uncomment below and update the code to test createJobCluster
        //instance.createJobCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLeafList', function() {
      it('should call createLeafList successfully', function(done) {
        //uncomment below and update the code to test createLeafList
        //instance.createLeafList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLeafType', function() {
      it('should call createLeafType successfully', function(done) {
        //uncomment below and update the code to test createLeafType
        //instance.createLeafType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocalizationList', function() {
      it('should call createLocalizationList successfully', function(done) {
        //uncomment below and update the code to test createLocalizationList
        //instance.createLocalizationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLocalizationType', function() {
      it('should call createLocalizationType successfully', function(done) {
        //uncomment below and update the code to test createLocalizationType
        //instance.createLocalizationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMedia', function() {
      it('should call createMedia successfully', function(done) {
        //uncomment below and update the code to test createMedia
        //instance.createMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMediaType', function() {
      it('should call createMediaType successfully', function(done) {
        //uncomment below and update the code to test createMediaType
        //instance.createMediaType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMembership', function() {
      it('should call createMembership successfully', function(done) {
        //uncomment below and update the code to test createMembership
        //instance.createMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createObtainAuthToken', function() {
      it('should call createObtainAuthToken successfully', function(done) {
        //uncomment below and update the code to test createObtainAuthToken
        //instance.createObtainAuthToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createOrganization', function() {
      it('should call createOrganization successfully', function(done) {
        //uncomment below and update the code to test createOrganization
        //instance.createOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPasswordReset', function() {
      it('should call createPasswordReset successfully', function(done) {
        //uncomment below and update the code to test createPasswordReset
        //instance.createPasswordReset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProject', function() {
      it('should call createProject successfully', function(done) {
        //uncomment below and update the code to test createProject
        //instance.createProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSection', function() {
      it('should call createSection successfully', function(done) {
        //uncomment below and update the code to test createSection
        //instance.createSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStateList', function() {
      it('should call createStateList successfully', function(done) {
        //uncomment below and update the code to test createStateList
        //instance.createStateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStateType', function() {
      it('should call createStateType successfully', function(done) {
        //uncomment below and update the code to test createStateType
        //instance.createStateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemporaryFile', function() {
      it('should call createTemporaryFile successfully', function(done) {
        //uncomment below and update the code to test createTemporaryFile
        //instance.createTemporaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVersion', function() {
      it('should call createVersion successfully', function(done) {
        //uncomment below and update the code to test createVersion
        //instance.createVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVideoFile', function() {
      it('should call createVideoFile successfully', function(done) {
        //uncomment below and update the code to test createVideoFile
        //instance.createVideoFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAffiliation', function() {
      it('should call deleteAffiliation successfully', function(done) {
        //uncomment below and update the code to test deleteAffiliation
        //instance.deleteAffiliation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAlgorithm', function() {
      it('should call deleteAlgorithm successfully', function(done) {
        //uncomment below and update the code to test deleteAlgorithm
        //instance.deleteAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnalysis', function() {
      it('should call deleteAnalysis successfully', function(done) {
        //uncomment below and update the code to test deleteAnalysis
        //instance.deleteAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAnnouncement', function() {
      it('should call deleteAnnouncement successfully', function(done) {
        //uncomment below and update the code to test deleteAnnouncement
        //instance.deleteAnnouncement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApplet', function() {
      it('should call deleteApplet successfully', function(done) {
        //uncomment below and update the code to test deleteApplet
        //instance.deleteApplet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAttribute', function() {
      it('should call deleteAttribute successfully', function(done) {
        //uncomment below and update the code to test deleteAttribute
        //instance.deleteAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAudioFile', function() {
      it('should call deleteAudioFile successfully', function(done) {
        //uncomment below and update the code to test deleteAudioFile
        //instance.deleteAudioFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAuxiliaryFile', function() {
      it('should call deleteAuxiliaryFile successfully', function(done) {
        //uncomment below and update the code to test deleteAuxiliaryFile
        //instance.deleteAuxiliaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBookmark', function() {
      it('should call deleteBookmark successfully', function(done) {
        //uncomment below and update the code to test deleteBookmark
        //instance.deleteBookmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBucket', function() {
      it('should call deleteBucket successfully', function(done) {
        //uncomment below and update the code to test deleteBucket
        //instance.deleteBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFavorite', function() {
      it('should call deleteFavorite successfully', function(done) {
        //uncomment below and update the code to test deleteFavorite
        //instance.deleteFavorite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFile', function() {
      it('should call deleteFile successfully', function(done) {
        //uncomment below and update the code to test deleteFile
        //instance.deleteFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFileType', function() {
      it('should call deleteFileType successfully', function(done) {
        //uncomment below and update the code to test deleteFileType
        //instance.deleteFileType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteImageFile', function() {
      it('should call deleteImageFile successfully', function(done) {
        //uncomment below and update the code to test deleteImageFile
        //instance.deleteImageFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInvitation', function() {
      it('should call deleteInvitation successfully', function(done) {
        //uncomment below and update the code to test deleteInvitation
        //instance.deleteInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJob', function() {
      it('should call deleteJob successfully', function(done) {
        //uncomment below and update the code to test deleteJob
        //instance.deleteJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJobCluster', function() {
      it('should call deleteJobCluster successfully', function(done) {
        //uncomment below and update the code to test deleteJobCluster
        //instance.deleteJobCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteJobList', function() {
      it('should call deleteJobList successfully', function(done) {
        //uncomment below and update the code to test deleteJobList
        //instance.deleteJobList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLeaf', function() {
      it('should call deleteLeaf successfully', function(done) {
        //uncomment below and update the code to test deleteLeaf
        //instance.deleteLeaf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLeafList', function() {
      it('should call deleteLeafList successfully', function(done) {
        //uncomment below and update the code to test deleteLeafList
        //instance.deleteLeafList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLeafType', function() {
      it('should call deleteLeafType successfully', function(done) {
        //uncomment below and update the code to test deleteLeafType
        //instance.deleteLeafType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocalization', function() {
      it('should call deleteLocalization successfully', function(done) {
        //uncomment below and update the code to test deleteLocalization
        //instance.deleteLocalization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocalizationList', function() {
      it('should call deleteLocalizationList successfully', function(done) {
        //uncomment below and update the code to test deleteLocalizationList
        //instance.deleteLocalizationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLocalizationType', function() {
      it('should call deleteLocalizationType successfully', function(done) {
        //uncomment below and update the code to test deleteLocalizationType
        //instance.deleteLocalizationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMedia', function() {
      it('should call deleteMedia successfully', function(done) {
        //uncomment below and update the code to test deleteMedia
        //instance.deleteMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMediaList', function() {
      it('should call deleteMediaList successfully', function(done) {
        //uncomment below and update the code to test deleteMediaList
        //instance.deleteMediaList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMediaType', function() {
      it('should call deleteMediaType successfully', function(done) {
        //uncomment below and update the code to test deleteMediaType
        //instance.deleteMediaType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMembership', function() {
      it('should call deleteMembership successfully', function(done) {
        //uncomment below and update the code to test deleteMembership
        //instance.deleteMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOrganization', function() {
      it('should call deleteOrganization successfully', function(done) {
        //uncomment below and update the code to test deleteOrganization
        //instance.deleteOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProject', function() {
      it('should call deleteProject successfully', function(done) {
        //uncomment below and update the code to test deleteProject
        //instance.deleteProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSection', function() {
      it('should call deleteSection successfully', function(done) {
        //uncomment below and update the code to test deleteSection
        //instance.deleteSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteState', function() {
      it('should call deleteState successfully', function(done) {
        //uncomment below and update the code to test deleteState
        //instance.deleteState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStateList', function() {
      it('should call deleteStateList successfully', function(done) {
        //uncomment below and update the code to test deleteStateList
        //instance.deleteStateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteStateType', function() {
      it('should call deleteStateType successfully', function(done) {
        //uncomment below and update the code to test deleteStateType
        //instance.deleteStateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemporaryFile', function() {
      it('should call deleteTemporaryFile successfully', function(done) {
        //uncomment below and update the code to test deleteTemporaryFile
        //instance.deleteTemporaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemporaryFileList', function() {
      it('should call deleteTemporaryFileList successfully', function(done) {
        //uncomment below and update the code to test deleteTemporaryFileList
        //instance.deleteTemporaryFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVersion', function() {
      it('should call deleteVersion successfully', function(done) {
        //uncomment below and update the code to test deleteVersion
        //instance.deleteVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoFile', function() {
      it('should call deleteVideoFile successfully', function(done) {
        //uncomment below and update the code to test deleteVideoFile
        //instance.deleteVideoFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAffiliation', function() {
      it('should call getAffiliation successfully', function(done) {
        //uncomment below and update the code to test getAffiliation
        //instance.getAffiliation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAffiliationList', function() {
      it('should call getAffiliationList successfully', function(done) {
        //uncomment below and update the code to test getAffiliationList
        //instance.getAffiliationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlgorithm', function() {
      it('should call getAlgorithm successfully', function(done) {
        //uncomment below and update the code to test getAlgorithm
        //instance.getAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlgorithmList', function() {
      it('should call getAlgorithmList successfully', function(done) {
        //uncomment below and update the code to test getAlgorithmList
        //instance.getAlgorithmList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnalysis', function() {
      it('should call getAnalysis successfully', function(done) {
        //uncomment below and update the code to test getAnalysis
        //instance.getAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnalysisList', function() {
      it('should call getAnalysisList successfully', function(done) {
        //uncomment below and update the code to test getAnalysisList
        //instance.getAnalysisList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnnouncementList', function() {
      it('should call getAnnouncementList successfully', function(done) {
        //uncomment below and update the code to test getAnnouncementList
        //instance.getAnnouncementList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAnonymousGatewaySchema', function() {
      it('should call getAnonymousGatewaySchema successfully', function(done) {
        //uncomment below and update the code to test getAnonymousGatewaySchema
        //instance.getAnonymousGatewaySchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplet', function() {
      it('should call getApplet successfully', function(done) {
        //uncomment below and update the code to test getApplet
        //instance.getApplet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAppletList', function() {
      it('should call getAppletList successfully', function(done) {
        //uncomment below and update the code to test getAppletList
        //instance.getAppletList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAudioFile', function() {
      it('should call getAudioFile successfully', function(done) {
        //uncomment below and update the code to test getAudioFile
        //instance.getAudioFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAudioFileList', function() {
      it('should call getAudioFileList successfully', function(done) {
        //uncomment below and update the code to test getAudioFileList
        //instance.getAudioFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuxiliaryFile', function() {
      it('should call getAuxiliaryFile successfully', function(done) {
        //uncomment below and update the code to test getAuxiliaryFile
        //instance.getAuxiliaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuxiliaryFileList', function() {
      it('should call getAuxiliaryFileList successfully', function(done) {
        //uncomment below and update the code to test getAuxiliaryFileList
        //instance.getAuxiliaryFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBookmark', function() {
      it('should call getBookmark successfully', function(done) {
        //uncomment below and update the code to test getBookmark
        //instance.getBookmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBookmarkList', function() {
      it('should call getBookmarkList successfully', function(done) {
        //uncomment below and update the code to test getBookmarkList
        //instance.getBookmarkList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucket', function() {
      it('should call getBucket successfully', function(done) {
        //uncomment below and update the code to test getBucket
        //instance.getBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBucketList', function() {
      it('should call getBucketList successfully', function(done) {
        //uncomment below and update the code to test getBucketList
        //instance.getBucketList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChangeLogList', function() {
      it('should call getChangeLogList successfully', function(done) {
        //uncomment below and update the code to test getChangeLogList
        //instance.getChangeLogList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClip', function() {
      it('should call getClip successfully', function(done) {
        //uncomment below and update the code to test getClip
        //instance.getClip(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClonedMedia', function() {
      it('should call getClonedMedia successfully', function(done) {
        //uncomment below and update the code to test getClonedMedia
        //instance.getClonedMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDownloadInfo', function() {
      it('should call getDownloadInfo successfully', function(done) {
        //uncomment below and update the code to test getDownloadInfo
        //instance.getDownloadInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavorite', function() {
      it('should call getFavorite successfully', function(done) {
        //uncomment below and update the code to test getFavorite
        //instance.getFavorite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavoriteList', function() {
      it('should call getFavoriteList successfully', function(done) {
        //uncomment below and update the code to test getFavoriteList
        //instance.getFavoriteList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFile', function() {
      it('should call getFile successfully', function(done) {
        //uncomment below and update the code to test getFile
        //instance.getFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFileList', function() {
      it('should call getFileList successfully', function(done) {
        //uncomment below and update the code to test getFileList
        //instance.getFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFileType', function() {
      it('should call getFileType successfully', function(done) {
        //uncomment below and update the code to test getFileType
        //instance.getFileType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFileTypeList', function() {
      it('should call getFileTypeList successfully', function(done) {
        //uncomment below and update the code to test getFileTypeList
        //instance.getFileTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFrame', function() {
      it('should call getFrame successfully', function(done) {
        //uncomment below and update the code to test getFrame
        //instance.getFrame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getImageFile', function() {
      it('should call getImageFile successfully', function(done) {
        //uncomment below and update the code to test getImageFile
        //instance.getImageFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getImageFileList', function() {
      it('should call getImageFileList successfully', function(done) {
        //uncomment below and update the code to test getImageFileList
        //instance.getImageFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvitation', function() {
      it('should call getInvitation successfully', function(done) {
        //uncomment below and update the code to test getInvitation
        //instance.getInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvitationList', function() {
      it('should call getInvitationList successfully', function(done) {
        //uncomment below and update the code to test getInvitationList
        //instance.getInvitationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJob', function() {
      it('should call getJob successfully', function(done) {
        //uncomment below and update the code to test getJob
        //instance.getJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobCluster', function() {
      it('should call getJobCluster successfully', function(done) {
        //uncomment below and update the code to test getJobCluster
        //instance.getJobCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobClusterList', function() {
      it('should call getJobClusterList successfully', function(done) {
        //uncomment below and update the code to test getJobClusterList
        //instance.getJobClusterList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJobList', function() {
      it('should call getJobList successfully', function(done) {
        //uncomment below and update the code to test getJobList
        //instance.getJobList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeaf', function() {
      it('should call getLeaf successfully', function(done) {
        //uncomment below and update the code to test getLeaf
        //instance.getLeaf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeafCount', function() {
      it('should call getLeafCount successfully', function(done) {
        //uncomment below and update the code to test getLeafCount
        //instance.getLeafCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeafCountById', function() {
      it('should call getLeafCountById successfully', function(done) {
        //uncomment below and update the code to test getLeafCountById
        //instance.getLeafCountById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeafList', function() {
      it('should call getLeafList successfully', function(done) {
        //uncomment below and update the code to test getLeafList
        //instance.getLeafList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeafListById', function() {
      it('should call getLeafListById successfully', function(done) {
        //uncomment below and update the code to test getLeafListById
        //instance.getLeafListById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeafType', function() {
      it('should call getLeafType successfully', function(done) {
        //uncomment below and update the code to test getLeafType
        //instance.getLeafType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLeafTypeList', function() {
      it('should call getLeafTypeList successfully', function(done) {
        //uncomment below and update the code to test getLeafTypeList
        //instance.getLeafTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalization', function() {
      it('should call getLocalization successfully', function(done) {
        //uncomment below and update the code to test getLocalization
        //instance.getLocalization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationCount', function() {
      it('should call getLocalizationCount successfully', function(done) {
        //uncomment below and update the code to test getLocalizationCount
        //instance.getLocalizationCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationCountById', function() {
      it('should call getLocalizationCountById successfully', function(done) {
        //uncomment below and update the code to test getLocalizationCountById
        //instance.getLocalizationCountById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationGraphic', function() {
      it('should call getLocalizationGraphic successfully', function(done) {
        //uncomment below and update the code to test getLocalizationGraphic
        //instance.getLocalizationGraphic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationList', function() {
      it('should call getLocalizationList successfully', function(done) {
        //uncomment below and update the code to test getLocalizationList
        //instance.getLocalizationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationListById', function() {
      it('should call getLocalizationListById successfully', function(done) {
        //uncomment below and update the code to test getLocalizationListById
        //instance.getLocalizationListById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationType', function() {
      it('should call getLocalizationType successfully', function(done) {
        //uncomment below and update the code to test getLocalizationType
        //instance.getLocalizationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLocalizationTypeList', function() {
      it('should call getLocalizationTypeList successfully', function(done) {
        //uncomment below and update the code to test getLocalizationTypeList
        //instance.getLocalizationTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMedia', function() {
      it('should call getMedia successfully', function(done) {
        //uncomment below and update the code to test getMedia
        //instance.getMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaCount', function() {
      it('should call getMediaCount successfully', function(done) {
        //uncomment below and update the code to test getMediaCount
        //instance.getMediaCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaCountById', function() {
      it('should call getMediaCountById successfully', function(done) {
        //uncomment below and update the code to test getMediaCountById
        //instance.getMediaCountById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaList', function() {
      it('should call getMediaList successfully', function(done) {
        //uncomment below and update the code to test getMediaList
        //instance.getMediaList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaListById', function() {
      it('should call getMediaListById successfully', function(done) {
        //uncomment below and update the code to test getMediaListById
        //instance.getMediaListById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaNext', function() {
      it('should call getMediaNext successfully', function(done) {
        //uncomment below and update the code to test getMediaNext
        //instance.getMediaNext(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaPrev', function() {
      it('should call getMediaPrev successfully', function(done) {
        //uncomment below and update the code to test getMediaPrev
        //instance.getMediaPrev(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaStats', function() {
      it('should call getMediaStats successfully', function(done) {
        //uncomment below and update the code to test getMediaStats
        //instance.getMediaStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaType', function() {
      it('should call getMediaType successfully', function(done) {
        //uncomment below and update the code to test getMediaType
        //instance.getMediaType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaTypeList', function() {
      it('should call getMediaTypeList successfully', function(done) {
        //uncomment below and update the code to test getMediaTypeList
        //instance.getMediaTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMembership', function() {
      it('should call getMembership successfully', function(done) {
        //uncomment below and update the code to test getMembership
        //instance.getMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMembershipList', function() {
      it('should call getMembershipList successfully', function(done) {
        //uncomment below and update the code to test getMembershipList
        //instance.getMembershipList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganization', function() {
      it('should call getOrganization successfully', function(done) {
        //uncomment below and update the code to test getOrganization
        //instance.getOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationList', function() {
      it('should call getOrganizationList successfully', function(done) {
        //uncomment below and update the code to test getOrganizationList
        //instance.getOrganizationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOrganizationUploadInfo', function() {
      it('should call getOrganizationUploadInfo successfully', function(done) {
        //uncomment below and update the code to test getOrganizationUploadInfo
        //instance.getOrganizationUploadInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPermalink', function() {
      it('should call getPermalink successfully', function(done) {
        //uncomment below and update the code to test getPermalink
        //instance.getPermalink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProject', function() {
      it('should call getProject successfully', function(done) {
        //uncomment below and update the code to test getProject
        //instance.getProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectList', function() {
      it('should call getProjectList successfully', function(done) {
        //uncomment below and update the code to test getProjectList
        //instance.getProjectList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSection', function() {
      it('should call getSection successfully', function(done) {
        //uncomment below and update the code to test getSection
        //instance.getSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSectionAnalysis', function() {
      it('should call getSectionAnalysis successfully', function(done) {
        //uncomment below and update the code to test getSectionAnalysis
        //instance.getSectionAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSectionList', function() {
      it('should call getSectionList successfully', function(done) {
        //uncomment below and update the code to test getSectionList
        //instance.getSectionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getState', function() {
      it('should call getState successfully', function(done) {
        //uncomment below and update the code to test getState
        //instance.getState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateCount', function() {
      it('should call getStateCount successfully', function(done) {
        //uncomment below and update the code to test getStateCount
        //instance.getStateCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateCountById', function() {
      it('should call getStateCountById successfully', function(done) {
        //uncomment below and update the code to test getStateCountById
        //instance.getStateCountById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateGraphic', function() {
      it('should call getStateGraphic successfully', function(done) {
        //uncomment below and update the code to test getStateGraphic
        //instance.getStateGraphic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateList', function() {
      it('should call getStateList successfully', function(done) {
        //uncomment below and update the code to test getStateList
        //instance.getStateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateListById', function() {
      it('should call getStateListById successfully', function(done) {
        //uncomment below and update the code to test getStateListById
        //instance.getStateListById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateType', function() {
      it('should call getStateType successfully', function(done) {
        //uncomment below and update the code to test getStateType
        //instance.getStateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStateTypeList', function() {
      it('should call getStateTypeList successfully', function(done) {
        //uncomment below and update the code to test getStateTypeList
        //instance.getStateTypeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemporaryFile', function() {
      it('should call getTemporaryFile successfully', function(done) {
        //uncomment below and update the code to test getTemporaryFile
        //instance.getTemporaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemporaryFileList', function() {
      it('should call getTemporaryFileList successfully', function(done) {
        //uncomment below and update the code to test getTemporaryFileList
        //instance.getTemporaryFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUploadInfo', function() {
      it('should call getUploadInfo successfully', function(done) {
        //uncomment below and update the code to test getUploadInfo
        //instance.getUploadInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVersion', function() {
      it('should call getVersion successfully', function(done) {
        //uncomment below and update the code to test getVersion
        //instance.getVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVersionList', function() {
      it('should call getVersionList successfully', function(done) {
        //uncomment below and update the code to test getVersionList
        //instance.getVersionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoFile', function() {
      it('should call getVideoFile successfully', function(done) {
        //uncomment below and update the code to test getVideoFile
        //instance.getVideoFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoFileList', function() {
      it('should call getVideoFileList successfully', function(done) {
        //uncomment below and update the code to test getVideoFileList
        //instance.getVideoFileList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leafSuggestion', function() {
      it('should call leafSuggestion successfully', function(done) {
        //uncomment below and update the code to test leafSuggestion
        //instance.leafSuggestion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mergeStates', function() {
      it('should call mergeStates successfully', function(done) {
        //uncomment below and update the code to test mergeStates
        //instance.mergeStates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notify', function() {
      it('should call notify successfully', function(done) {
        //uncomment below and update the code to test notify
        //instance.notify(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerAlgorithm', function() {
      it('should call registerAlgorithm successfully', function(done) {
        //uncomment below and update the code to test registerAlgorithm
        //instance.registerAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerApplet', function() {
      it('should call registerApplet successfully', function(done) {
        //uncomment below and update the code to test registerApplet
        //instance.registerApplet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renameAttribute', function() {
      it('should call renameAttribute successfully', function(done) {
        //uncomment below and update the code to test renameAttribute
        //instance.renameAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAttribute', function() {
      it('should call replaceAttribute successfully', function(done) {
        //uncomment below and update the code to test replaceAttribute
        //instance.replaceAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveAlgorithmManifest', function() {
      it('should call saveAlgorithmManifest successfully', function(done) {
        //uncomment below and update the code to test saveAlgorithmManifest
        //instance.saveAlgorithmManifest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveGenericFile', function() {
      it('should call saveGenericFile successfully', function(done) {
        //uncomment below and update the code to test saveGenericFile
        //instance.saveGenericFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendEmail', function() {
      it('should call sendEmail successfully', function(done) {
        //uncomment below and update the code to test sendEmail
        //instance.sendEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transcode', function() {
      it('should call transcode successfully', function(done) {
        //uncomment below and update the code to test transcode
        //instance.transcode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('trimStateEnd', function() {
      it('should call trimStateEnd successfully', function(done) {
        //uncomment below and update the code to test trimStateEnd
        //instance.trimStateEnd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAffiliation', function() {
      it('should call updateAffiliation successfully', function(done) {
        //uncomment below and update the code to test updateAffiliation
        //instance.updateAffiliation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAlgorithm', function() {
      it('should call updateAlgorithm successfully', function(done) {
        //uncomment below and update the code to test updateAlgorithm
        //instance.updateAlgorithm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAnalysis', function() {
      it('should call updateAnalysis successfully', function(done) {
        //uncomment below and update the code to test updateAnalysis
        //instance.updateAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApplet', function() {
      it('should call updateApplet successfully', function(done) {
        //uncomment below and update the code to test updateApplet
        //instance.updateApplet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAudioFile', function() {
      it('should call updateAudioFile successfully', function(done) {
        //uncomment below and update the code to test updateAudioFile
        //instance.updateAudioFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAuxiliaryFile', function() {
      it('should call updateAuxiliaryFile successfully', function(done) {
        //uncomment below and update the code to test updateAuxiliaryFile
        //instance.updateAuxiliaryFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBookmark', function() {
      it('should call updateBookmark successfully', function(done) {
        //uncomment below and update the code to test updateBookmark
        //instance.updateBookmark(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBucket', function() {
      it('should call updateBucket successfully', function(done) {
        //uncomment below and update the code to test updateBucket
        //instance.updateBucket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFavorite', function() {
      it('should call updateFavorite successfully', function(done) {
        //uncomment below and update the code to test updateFavorite
        //instance.updateFavorite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFile', function() {
      it('should call updateFile successfully', function(done) {
        //uncomment below and update the code to test updateFile
        //instance.updateFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFileType', function() {
      it('should call updateFileType successfully', function(done) {
        //uncomment below and update the code to test updateFileType
        //instance.updateFileType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateImageFile', function() {
      it('should call updateImageFile successfully', function(done) {
        //uncomment below and update the code to test updateImageFile
        //instance.updateImageFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInvitation', function() {
      it('should call updateInvitation successfully', function(done) {
        //uncomment below and update the code to test updateInvitation
        //instance.updateInvitation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateJobCluster', function() {
      it('should call updateJobCluster successfully', function(done) {
        //uncomment below and update the code to test updateJobCluster
        //instance.updateJobCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLeaf', function() {
      it('should call updateLeaf successfully', function(done) {
        //uncomment below and update the code to test updateLeaf
        //instance.updateLeaf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLeafList', function() {
      it('should call updateLeafList successfully', function(done) {
        //uncomment below and update the code to test updateLeafList
        //instance.updateLeafList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLeafType', function() {
      it('should call updateLeafType successfully', function(done) {
        //uncomment below and update the code to test updateLeafType
        //instance.updateLeafType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocalization', function() {
      it('should call updateLocalization successfully', function(done) {
        //uncomment below and update the code to test updateLocalization
        //instance.updateLocalization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocalizationList', function() {
      it('should call updateLocalizationList successfully', function(done) {
        //uncomment below and update the code to test updateLocalizationList
        //instance.updateLocalizationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLocalizationType', function() {
      it('should call updateLocalizationType successfully', function(done) {
        //uncomment below and update the code to test updateLocalizationType
        //instance.updateLocalizationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMedia', function() {
      it('should call updateMedia successfully', function(done) {
        //uncomment below and update the code to test updateMedia
        //instance.updateMedia(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMediaList', function() {
      it('should call updateMediaList successfully', function(done) {
        //uncomment below and update the code to test updateMediaList
        //instance.updateMediaList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMediaType', function() {
      it('should call updateMediaType successfully', function(done) {
        //uncomment below and update the code to test updateMediaType
        //instance.updateMediaType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMembership', function() {
      it('should call updateMembership successfully', function(done) {
        //uncomment below and update the code to test updateMembership
        //instance.updateMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateOrganization', function() {
      it('should call updateOrganization successfully', function(done) {
        //uncomment below and update the code to test updateOrganization
        //instance.updateOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProject', function() {
      it('should call updateProject successfully', function(done) {
        //uncomment below and update the code to test updateProject
        //instance.updateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSection', function() {
      it('should call updateSection successfully', function(done) {
        //uncomment below and update the code to test updateSection
        //instance.updateSection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateState', function() {
      it('should call updateState successfully', function(done) {
        //uncomment below and update the code to test updateState
        //instance.updateState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStateList', function() {
      it('should call updateStateList successfully', function(done) {
        //uncomment below and update the code to test updateStateList
        //instance.updateStateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateStateType', function() {
      it('should call updateStateType successfully', function(done) {
        //uncomment below and update the code to test updateStateType
        //instance.updateStateType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVersion', function() {
      it('should call updateVersion successfully', function(done) {
        //uncomment below and update the code to test updateVersion
        //instance.updateVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideoFile', function() {
      it('should call updateVideoFile successfully', function(done) {
        //uncomment below and update the code to test updateVideoFile
        //instance.updateVideoFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('userExists', function() {
      it('should call userExists successfully', function(done) {
        //uncomment below and update the code to test userExists
        //instance.userExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('whoami', function() {
      it('should call whoami successfully', function(done) {
        //uncomment below and update the code to test whoami
        //instance.whoami(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
