/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Affiliation from './model/Affiliation';
import AffiliationSpec from './model/AffiliationSpec';
import AffiliationUpdate from './model/AffiliationUpdate';
import Algorithm from './model/Algorithm';
import AlgorithmLaunch from './model/AlgorithmLaunch';
import AlgorithmLaunchSpec from './model/AlgorithmLaunchSpec';
import AlgorithmManifest from './model/AlgorithmManifest';
import AlgorithmManifestSpec from './model/AlgorithmManifestSpec';
import AlgorithmParameter from './model/AlgorithmParameter';
import AlgorithmParameterValue from './model/AlgorithmParameterValue';
import AlgorithmSpec from './model/AlgorithmSpec';
import Analysis from './model/Analysis';
import AnalysisSpec from './model/AnalysisSpec';
import Announcement from './model/Announcement';
import Applet from './model/Applet';
import AppletSpec from './model/AppletSpec';
import ArchiveConfig from './model/ArchiveConfig';
import AttributeType from './model/AttributeType';
import AttributeTypeDelete from './model/AttributeTypeDelete';
import AttributeTypeSpec from './model/AttributeTypeSpec';
import AttributeTypeUpdate from './model/AttributeTypeUpdate';
import AttributeTypeUpdateNewAttributeType from './model/AttributeTypeUpdateNewAttributeType';
import AttributeValue from './model/AttributeValue';
import AudioDefinition from './model/AudioDefinition';
import AutocompleteService from './model/AutocompleteService';
import AuxiliaryFileDefinition from './model/AuxiliaryFileDefinition';
import BadRequestResponse from './model/BadRequestResponse';
import Bookmark from './model/Bookmark';
import BookmarkSpec from './model/BookmarkSpec';
import BookmarkUpdate from './model/BookmarkUpdate';
import Bucket from './model/Bucket';
import BucketSpec from './model/BucketSpec';
import BucketUpdate from './model/BucketUpdate';
import ChangeLog from './model/ChangeLog';
import ChangeLogDescriptionOfChange from './model/ChangeLogDescriptionOfChange';
import ChangeLogDescriptionOfChangeNewInner from './model/ChangeLogDescriptionOfChangeNewInner';
import CloneMediaSpec from './model/CloneMediaSpec';
import Color from './model/Color';
import ColorMap from './model/ColorMap';
import ConcatDefinition from './model/ConcatDefinition';
import CreateListResponse from './model/CreateListResponse';
import CreateResponse from './model/CreateResponse';
import Credentials from './model/Credentials';
import DownloadInfo from './model/DownloadInfo';
import DownloadInfoSpec from './model/DownloadInfoSpec';
import EmailAttachmentSpec from './model/EmailAttachmentSpec';
import EmailSpec from './model/EmailSpec';
import EncodeConfig from './model/EncodeConfig';
import Favorite from './model/Favorite';
import FavoriteSpec from './model/FavoriteSpec';
import FavoriteUpdate from './model/FavoriteUpdate';
import FeedDefinition from './model/FeedDefinition';
import File from './model/File';
import FileSpec from './model/FileSpec';
import FileType from './model/FileType';
import FileTypeSpec from './model/FileTypeSpec';
import FileTypeUpdate from './model/FileTypeUpdate';
import FileUpdate from './model/FileUpdate';
import Fill from './model/Fill';
import FloatArrayQuery from './model/FloatArrayQuery';
import GenericFile from './model/GenericFile';
import GenericFileSpec from './model/GenericFileSpec';
import GetClonedMediaResponse from './model/GetClonedMediaResponse';
import ImageDefinition from './model/ImageDefinition';
import Invitation from './model/Invitation';
import InvitationSpec from './model/InvitationSpec';
import InvitationUpdate from './model/InvitationUpdate';
import Job from './model/Job';
import JobCluster from './model/JobCluster';
import JobClusterSpec from './model/JobClusterSpec';
import JobNode from './model/JobNode';
import Leaf from './model/Leaf';
import LeafBulkUpdate from './model/LeafBulkUpdate';
import LeafIdQuery from './model/LeafIdQuery';
import LeafSpec from './model/LeafSpec';
import LeafSuggestion from './model/LeafSuggestion';
import LeafType from './model/LeafType';
import LeafTypeSpec from './model/LeafTypeSpec';
import LeafTypeUpdate from './model/LeafTypeUpdate';
import LeafUpdate from './model/LeafUpdate';
import LiveDefinition from './model/LiveDefinition';
import LiveUpdateDefinition from './model/LiveUpdateDefinition';
import Localization from './model/Localization';
import LocalizationBulkUpdate from './model/LocalizationBulkUpdate';
import LocalizationIdQuery from './model/LocalizationIdQuery';
import LocalizationSpec from './model/LocalizationSpec';
import LocalizationType from './model/LocalizationType';
import LocalizationTypeSpec from './model/LocalizationTypeSpec';
import LocalizationTypeUpdate from './model/LocalizationTypeUpdate';
import LocalizationUpdate from './model/LocalizationUpdate';
import Media from './model/Media';
import MediaBulkUpdate from './model/MediaBulkUpdate';
import MediaFiles from './model/MediaFiles';
import MediaIdQuery from './model/MediaIdQuery';
import MediaNext from './model/MediaNext';
import MediaPrev from './model/MediaPrev';
import MediaSpec from './model/MediaSpec';
import MediaStats from './model/MediaStats';
import MediaType from './model/MediaType';
import MediaTypeSpec from './model/MediaTypeSpec';
import MediaTypeUpdate from './model/MediaTypeUpdate';
import MediaUpdate from './model/MediaUpdate';
import Membership from './model/Membership';
import MembershipSpec from './model/MembershipSpec';
import MembershipUpdate from './model/MembershipUpdate';
import MessageResponse from './model/MessageResponse';
import MultiDefinition from './model/MultiDefinition';
import NotFoundResponse from './model/NotFoundResponse';
import NotifySpec from './model/NotifySpec';
import Organization from './model/Organization';
import OrganizationSpec from './model/OrganizationSpec';
import OrganizationUpdate from './model/OrganizationUpdate';
import PasswordResetSpec from './model/PasswordResetSpec';
import Project from './model/Project';
import ProjectSpec from './model/ProjectSpec';
import ProjectUpdate from './model/ProjectUpdate';
import ResolutionConfig from './model/ResolutionConfig';
import S3StorageConfig from './model/S3StorageConfig';
import Section from './model/Section';
import SectionSpec from './model/SectionSpec';
import SectionUpdate from './model/SectionUpdate';
import State from './model/State';
import StateBulkUpdate from './model/StateBulkUpdate';
import StateIdQuery from './model/StateIdQuery';
import StateMergeUpdate from './model/StateMergeUpdate';
import StateSpec from './model/StateSpec';
import StateTrimUpdate from './model/StateTrimUpdate';
import StateType from './model/StateType';
import StateTypeSpec from './model/StateTypeSpec';
import StateTypeUpdate from './model/StateTypeUpdate';
import StateUpdate from './model/StateUpdate';
import TemporaryFile from './model/TemporaryFile';
import TemporaryFileSpec from './model/TemporaryFileSpec';
import Token from './model/Token';
import Transcode from './model/Transcode';
import TranscodeSpec from './model/TranscodeSpec';
import UploadCompletionSpec from './model/UploadCompletionSpec';
import UploadInfo from './model/UploadInfo';
import UploadPart from './model/UploadPart';
import User from './model/User';
import UserSpec from './model/UserSpec';
import UserUpdate from './model/UserUpdate';
import Version from './model/Version';
import VersionSpec from './model/VersionSpec';
import VersionUpdate from './model/VersionUpdate';
import VideoClip from './model/VideoClip';
import VideoDefinition from './model/VideoDefinition';
import TatorApi from './api/TatorApi';


/**
* JavaScript client for Tator..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Tator = require('index'); // See note below*.
* var xxxSvc = new Tator.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Tator.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Tator.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Tator.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.5
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Affiliation model constructor.
     * @property {module:model/Affiliation}
     */
    Affiliation,

    /**
     * The AffiliationSpec model constructor.
     * @property {module:model/AffiliationSpec}
     */
    AffiliationSpec,

    /**
     * The AffiliationUpdate model constructor.
     * @property {module:model/AffiliationUpdate}
     */
    AffiliationUpdate,

    /**
     * The Algorithm model constructor.
     * @property {module:model/Algorithm}
     */
    Algorithm,

    /**
     * The AlgorithmLaunch model constructor.
     * @property {module:model/AlgorithmLaunch}
     */
    AlgorithmLaunch,

    /**
     * The AlgorithmLaunchSpec model constructor.
     * @property {module:model/AlgorithmLaunchSpec}
     */
    AlgorithmLaunchSpec,

    /**
     * The AlgorithmManifest model constructor.
     * @property {module:model/AlgorithmManifest}
     */
    AlgorithmManifest,

    /**
     * The AlgorithmManifestSpec model constructor.
     * @property {module:model/AlgorithmManifestSpec}
     */
    AlgorithmManifestSpec,

    /**
     * The AlgorithmParameter model constructor.
     * @property {module:model/AlgorithmParameter}
     */
    AlgorithmParameter,

    /**
     * The AlgorithmParameterValue model constructor.
     * @property {module:model/AlgorithmParameterValue}
     */
    AlgorithmParameterValue,

    /**
     * The AlgorithmSpec model constructor.
     * @property {module:model/AlgorithmSpec}
     */
    AlgorithmSpec,

    /**
     * The Analysis model constructor.
     * @property {module:model/Analysis}
     */
    Analysis,

    /**
     * The AnalysisSpec model constructor.
     * @property {module:model/AnalysisSpec}
     */
    AnalysisSpec,

    /**
     * The Announcement model constructor.
     * @property {module:model/Announcement}
     */
    Announcement,

    /**
     * The Applet model constructor.
     * @property {module:model/Applet}
     */
    Applet,

    /**
     * The AppletSpec model constructor.
     * @property {module:model/AppletSpec}
     */
    AppletSpec,

    /**
     * The ArchiveConfig model constructor.
     * @property {module:model/ArchiveConfig}
     */
    ArchiveConfig,

    /**
     * The AttributeType model constructor.
     * @property {module:model/AttributeType}
     */
    AttributeType,

    /**
     * The AttributeTypeDelete model constructor.
     * @property {module:model/AttributeTypeDelete}
     */
    AttributeTypeDelete,

    /**
     * The AttributeTypeSpec model constructor.
     * @property {module:model/AttributeTypeSpec}
     */
    AttributeTypeSpec,

    /**
     * The AttributeTypeUpdate model constructor.
     * @property {module:model/AttributeTypeUpdate}
     */
    AttributeTypeUpdate,

    /**
     * The AttributeTypeUpdateNewAttributeType model constructor.
     * @property {module:model/AttributeTypeUpdateNewAttributeType}
     */
    AttributeTypeUpdateNewAttributeType,

    /**
     * The AttributeValue model constructor.
     * @property {module:model/AttributeValue}
     */
    AttributeValue,

    /**
     * The AudioDefinition model constructor.
     * @property {module:model/AudioDefinition}
     */
    AudioDefinition,

    /**
     * The AutocompleteService model constructor.
     * @property {module:model/AutocompleteService}
     */
    AutocompleteService,

    /**
     * The AuxiliaryFileDefinition model constructor.
     * @property {module:model/AuxiliaryFileDefinition}
     */
    AuxiliaryFileDefinition,

    /**
     * The BadRequestResponse model constructor.
     * @property {module:model/BadRequestResponse}
     */
    BadRequestResponse,

    /**
     * The Bookmark model constructor.
     * @property {module:model/Bookmark}
     */
    Bookmark,

    /**
     * The BookmarkSpec model constructor.
     * @property {module:model/BookmarkSpec}
     */
    BookmarkSpec,

    /**
     * The BookmarkUpdate model constructor.
     * @property {module:model/BookmarkUpdate}
     */
    BookmarkUpdate,

    /**
     * The Bucket model constructor.
     * @property {module:model/Bucket}
     */
    Bucket,

    /**
     * The BucketSpec model constructor.
     * @property {module:model/BucketSpec}
     */
    BucketSpec,

    /**
     * The BucketUpdate model constructor.
     * @property {module:model/BucketUpdate}
     */
    BucketUpdate,

    /**
     * The ChangeLog model constructor.
     * @property {module:model/ChangeLog}
     */
    ChangeLog,

    /**
     * The ChangeLogDescriptionOfChange model constructor.
     * @property {module:model/ChangeLogDescriptionOfChange}
     */
    ChangeLogDescriptionOfChange,

    /**
     * The ChangeLogDescriptionOfChangeNewInner model constructor.
     * @property {module:model/ChangeLogDescriptionOfChangeNewInner}
     */
    ChangeLogDescriptionOfChangeNewInner,

    /**
     * The CloneMediaSpec model constructor.
     * @property {module:model/CloneMediaSpec}
     */
    CloneMediaSpec,

    /**
     * The Color model constructor.
     * @property {module:model/Color}
     */
    Color,

    /**
     * The ColorMap model constructor.
     * @property {module:model/ColorMap}
     */
    ColorMap,

    /**
     * The ConcatDefinition model constructor.
     * @property {module:model/ConcatDefinition}
     */
    ConcatDefinition,

    /**
     * The CreateListResponse model constructor.
     * @property {module:model/CreateListResponse}
     */
    CreateListResponse,

    /**
     * The CreateResponse model constructor.
     * @property {module:model/CreateResponse}
     */
    CreateResponse,

    /**
     * The Credentials model constructor.
     * @property {module:model/Credentials}
     */
    Credentials,

    /**
     * The DownloadInfo model constructor.
     * @property {module:model/DownloadInfo}
     */
    DownloadInfo,

    /**
     * The DownloadInfoSpec model constructor.
     * @property {module:model/DownloadInfoSpec}
     */
    DownloadInfoSpec,

    /**
     * The EmailAttachmentSpec model constructor.
     * @property {module:model/EmailAttachmentSpec}
     */
    EmailAttachmentSpec,

    /**
     * The EmailSpec model constructor.
     * @property {module:model/EmailSpec}
     */
    EmailSpec,

    /**
     * The EncodeConfig model constructor.
     * @property {module:model/EncodeConfig}
     */
    EncodeConfig,

    /**
     * The Favorite model constructor.
     * @property {module:model/Favorite}
     */
    Favorite,

    /**
     * The FavoriteSpec model constructor.
     * @property {module:model/FavoriteSpec}
     */
    FavoriteSpec,

    /**
     * The FavoriteUpdate model constructor.
     * @property {module:model/FavoriteUpdate}
     */
    FavoriteUpdate,

    /**
     * The FeedDefinition model constructor.
     * @property {module:model/FeedDefinition}
     */
    FeedDefinition,

    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File,

    /**
     * The FileSpec model constructor.
     * @property {module:model/FileSpec}
     */
    FileSpec,

    /**
     * The FileType model constructor.
     * @property {module:model/FileType}
     */
    FileType,

    /**
     * The FileTypeSpec model constructor.
     * @property {module:model/FileTypeSpec}
     */
    FileTypeSpec,

    /**
     * The FileTypeUpdate model constructor.
     * @property {module:model/FileTypeUpdate}
     */
    FileTypeUpdate,

    /**
     * The FileUpdate model constructor.
     * @property {module:model/FileUpdate}
     */
    FileUpdate,

    /**
     * The Fill model constructor.
     * @property {module:model/Fill}
     */
    Fill,

    /**
     * The FloatArrayQuery model constructor.
     * @property {module:model/FloatArrayQuery}
     */
    FloatArrayQuery,

    /**
     * The GenericFile model constructor.
     * @property {module:model/GenericFile}
     */
    GenericFile,

    /**
     * The GenericFileSpec model constructor.
     * @property {module:model/GenericFileSpec}
     */
    GenericFileSpec,

    /**
     * The GetClonedMediaResponse model constructor.
     * @property {module:model/GetClonedMediaResponse}
     */
    GetClonedMediaResponse,

    /**
     * The ImageDefinition model constructor.
     * @property {module:model/ImageDefinition}
     */
    ImageDefinition,

    /**
     * The Invitation model constructor.
     * @property {module:model/Invitation}
     */
    Invitation,

    /**
     * The InvitationSpec model constructor.
     * @property {module:model/InvitationSpec}
     */
    InvitationSpec,

    /**
     * The InvitationUpdate model constructor.
     * @property {module:model/InvitationUpdate}
     */
    InvitationUpdate,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The JobCluster model constructor.
     * @property {module:model/JobCluster}
     */
    JobCluster,

    /**
     * The JobClusterSpec model constructor.
     * @property {module:model/JobClusterSpec}
     */
    JobClusterSpec,

    /**
     * The JobNode model constructor.
     * @property {module:model/JobNode}
     */
    JobNode,

    /**
     * The Leaf model constructor.
     * @property {module:model/Leaf}
     */
    Leaf,

    /**
     * The LeafBulkUpdate model constructor.
     * @property {module:model/LeafBulkUpdate}
     */
    LeafBulkUpdate,

    /**
     * The LeafIdQuery model constructor.
     * @property {module:model/LeafIdQuery}
     */
    LeafIdQuery,

    /**
     * The LeafSpec model constructor.
     * @property {module:model/LeafSpec}
     */
    LeafSpec,

    /**
     * The LeafSuggestion model constructor.
     * @property {module:model/LeafSuggestion}
     */
    LeafSuggestion,

    /**
     * The LeafType model constructor.
     * @property {module:model/LeafType}
     */
    LeafType,

    /**
     * The LeafTypeSpec model constructor.
     * @property {module:model/LeafTypeSpec}
     */
    LeafTypeSpec,

    /**
     * The LeafTypeUpdate model constructor.
     * @property {module:model/LeafTypeUpdate}
     */
    LeafTypeUpdate,

    /**
     * The LeafUpdate model constructor.
     * @property {module:model/LeafUpdate}
     */
    LeafUpdate,

    /**
     * The LiveDefinition model constructor.
     * @property {module:model/LiveDefinition}
     */
    LiveDefinition,

    /**
     * The LiveUpdateDefinition model constructor.
     * @property {module:model/LiveUpdateDefinition}
     */
    LiveUpdateDefinition,

    /**
     * The Localization model constructor.
     * @property {module:model/Localization}
     */
    Localization,

    /**
     * The LocalizationBulkUpdate model constructor.
     * @property {module:model/LocalizationBulkUpdate}
     */
    LocalizationBulkUpdate,

    /**
     * The LocalizationIdQuery model constructor.
     * @property {module:model/LocalizationIdQuery}
     */
    LocalizationIdQuery,

    /**
     * The LocalizationSpec model constructor.
     * @property {module:model/LocalizationSpec}
     */
    LocalizationSpec,

    /**
     * The LocalizationType model constructor.
     * @property {module:model/LocalizationType}
     */
    LocalizationType,

    /**
     * The LocalizationTypeSpec model constructor.
     * @property {module:model/LocalizationTypeSpec}
     */
    LocalizationTypeSpec,

    /**
     * The LocalizationTypeUpdate model constructor.
     * @property {module:model/LocalizationTypeUpdate}
     */
    LocalizationTypeUpdate,

    /**
     * The LocalizationUpdate model constructor.
     * @property {module:model/LocalizationUpdate}
     */
    LocalizationUpdate,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The MediaBulkUpdate model constructor.
     * @property {module:model/MediaBulkUpdate}
     */
    MediaBulkUpdate,

    /**
     * The MediaFiles model constructor.
     * @property {module:model/MediaFiles}
     */
    MediaFiles,

    /**
     * The MediaIdQuery model constructor.
     * @property {module:model/MediaIdQuery}
     */
    MediaIdQuery,

    /**
     * The MediaNext model constructor.
     * @property {module:model/MediaNext}
     */
    MediaNext,

    /**
     * The MediaPrev model constructor.
     * @property {module:model/MediaPrev}
     */
    MediaPrev,

    /**
     * The MediaSpec model constructor.
     * @property {module:model/MediaSpec}
     */
    MediaSpec,

    /**
     * The MediaStats model constructor.
     * @property {module:model/MediaStats}
     */
    MediaStats,

    /**
     * The MediaType model constructor.
     * @property {module:model/MediaType}
     */
    MediaType,

    /**
     * The MediaTypeSpec model constructor.
     * @property {module:model/MediaTypeSpec}
     */
    MediaTypeSpec,

    /**
     * The MediaTypeUpdate model constructor.
     * @property {module:model/MediaTypeUpdate}
     */
    MediaTypeUpdate,

    /**
     * The MediaUpdate model constructor.
     * @property {module:model/MediaUpdate}
     */
    MediaUpdate,

    /**
     * The Membership model constructor.
     * @property {module:model/Membership}
     */
    Membership,

    /**
     * The MembershipSpec model constructor.
     * @property {module:model/MembershipSpec}
     */
    MembershipSpec,

    /**
     * The MembershipUpdate model constructor.
     * @property {module:model/MembershipUpdate}
     */
    MembershipUpdate,

    /**
     * The MessageResponse model constructor.
     * @property {module:model/MessageResponse}
     */
    MessageResponse,

    /**
     * The MultiDefinition model constructor.
     * @property {module:model/MultiDefinition}
     */
    MultiDefinition,

    /**
     * The NotFoundResponse model constructor.
     * @property {module:model/NotFoundResponse}
     */
    NotFoundResponse,

    /**
     * The NotifySpec model constructor.
     * @property {module:model/NotifySpec}
     */
    NotifySpec,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The OrganizationSpec model constructor.
     * @property {module:model/OrganizationSpec}
     */
    OrganizationSpec,

    /**
     * The OrganizationUpdate model constructor.
     * @property {module:model/OrganizationUpdate}
     */
    OrganizationUpdate,

    /**
     * The PasswordResetSpec model constructor.
     * @property {module:model/PasswordResetSpec}
     */
    PasswordResetSpec,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectSpec model constructor.
     * @property {module:model/ProjectSpec}
     */
    ProjectSpec,

    /**
     * The ProjectUpdate model constructor.
     * @property {module:model/ProjectUpdate}
     */
    ProjectUpdate,

    /**
     * The ResolutionConfig model constructor.
     * @property {module:model/ResolutionConfig}
     */
    ResolutionConfig,

    /**
     * The S3StorageConfig model constructor.
     * @property {module:model/S3StorageConfig}
     */
    S3StorageConfig,

    /**
     * The Section model constructor.
     * @property {module:model/Section}
     */
    Section,

    /**
     * The SectionSpec model constructor.
     * @property {module:model/SectionSpec}
     */
    SectionSpec,

    /**
     * The SectionUpdate model constructor.
     * @property {module:model/SectionUpdate}
     */
    SectionUpdate,

    /**
     * The State model constructor.
     * @property {module:model/State}
     */
    State,

    /**
     * The StateBulkUpdate model constructor.
     * @property {module:model/StateBulkUpdate}
     */
    StateBulkUpdate,

    /**
     * The StateIdQuery model constructor.
     * @property {module:model/StateIdQuery}
     */
    StateIdQuery,

    /**
     * The StateMergeUpdate model constructor.
     * @property {module:model/StateMergeUpdate}
     */
    StateMergeUpdate,

    /**
     * The StateSpec model constructor.
     * @property {module:model/StateSpec}
     */
    StateSpec,

    /**
     * The StateTrimUpdate model constructor.
     * @property {module:model/StateTrimUpdate}
     */
    StateTrimUpdate,

    /**
     * The StateType model constructor.
     * @property {module:model/StateType}
     */
    StateType,

    /**
     * The StateTypeSpec model constructor.
     * @property {module:model/StateTypeSpec}
     */
    StateTypeSpec,

    /**
     * The StateTypeUpdate model constructor.
     * @property {module:model/StateTypeUpdate}
     */
    StateTypeUpdate,

    /**
     * The StateUpdate model constructor.
     * @property {module:model/StateUpdate}
     */
    StateUpdate,

    /**
     * The TemporaryFile model constructor.
     * @property {module:model/TemporaryFile}
     */
    TemporaryFile,

    /**
     * The TemporaryFileSpec model constructor.
     * @property {module:model/TemporaryFileSpec}
     */
    TemporaryFileSpec,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The Transcode model constructor.
     * @property {module:model/Transcode}
     */
    Transcode,

    /**
     * The TranscodeSpec model constructor.
     * @property {module:model/TranscodeSpec}
     */
    TranscodeSpec,

    /**
     * The UploadCompletionSpec model constructor.
     * @property {module:model/UploadCompletionSpec}
     */
    UploadCompletionSpec,

    /**
     * The UploadInfo model constructor.
     * @property {module:model/UploadInfo}
     */
    UploadInfo,

    /**
     * The UploadPart model constructor.
     * @property {module:model/UploadPart}
     */
    UploadPart,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserSpec model constructor.
     * @property {module:model/UserSpec}
     */
    UserSpec,

    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate,

    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version,

    /**
     * The VersionSpec model constructor.
     * @property {module:model/VersionSpec}
     */
    VersionSpec,

    /**
     * The VersionUpdate model constructor.
     * @property {module:model/VersionUpdate}
     */
    VersionUpdate,

    /**
     * The VideoClip model constructor.
     * @property {module:model/VideoClip}
     */
    VideoClip,

    /**
     * The VideoDefinition model constructor.
     * @property {module:model/VideoDefinition}
     */
    VideoDefinition,

    /**
    * The TatorApi service constructor.
    * @property {module:api/TatorApi}
    */
    TatorApi
};
