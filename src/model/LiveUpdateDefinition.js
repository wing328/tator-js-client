/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LiveDefinition from './LiveDefinition';

/**
 * The LiveUpdateDefinition model module.
 * @module model/LiveUpdateDefinition
 * @version 0.0.5
 */
class LiveUpdateDefinition {
    /**
     * Constructs a new <code>LiveUpdateDefinition</code>.
     * @alias module:model/LiveUpdateDefinition
     * @param streams {Array.<module:model/LiveDefinition>} 
     * @param layout {Array.<Number>} 2-element array to define rxc layout
     */
    constructor(streams, layout) { 
        
        LiveUpdateDefinition.initialize(this, streams, layout);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streams, layout) { 
        obj['streams'] = streams;
        obj['layout'] = layout;
    }

    /**
     * Constructs a <code>LiveUpdateDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiveUpdateDefinition} obj Optional instance to populate.
     * @return {module:model/LiveUpdateDefinition} The populated <code>LiveUpdateDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiveUpdateDefinition();

            if (data.hasOwnProperty('streams')) {
                obj['streams'] = ApiClient.convertToType(data['streams'], [LiveDefinition]);
            }
            if (data.hasOwnProperty('layout')) {
                obj['layout'] = ApiClient.convertToType(data['layout'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiveUpdateDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiveUpdateDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LiveUpdateDefinition.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['streams']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['streams'])) {
                throw new Error("Expected the field `streams` to be an array in the JSON data but got " + data['streams']);
            }
            // validate the optional field `streams` (array)
            for (const item of data['streams']) {
                LiveDefinition.validateJsonObject(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['layout'])) {
            throw new Error("Expected the field `layout` to be an array in the JSON data but got " + data['layout']);
        }

        return true;
    }


}

LiveUpdateDefinition.RequiredProperties = ["streams", "layout"];

/**
 * @member {Array.<module:model/LiveDefinition>} streams
 */
LiveUpdateDefinition.prototype['streams'] = undefined;

/**
 * 2-element array to define rxc layout
 * @member {Array.<Number>} layout
 */
LiveUpdateDefinition.prototype['layout'] = undefined;






export default LiveUpdateDefinition;

