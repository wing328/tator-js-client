/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3StorageConfig model module.
 * @module model/S3StorageConfig
 * @version 0.0.5
 */
class S3StorageConfig {
    /**
     * Constructs a new <code>S3StorageConfig</code>.
     * Settings for AWS S3 archival storage. If not given, the archival video will be stored on the Tator website.
     * @alias module:model/S3StorageConfig
     */
    constructor() { 
        
        S3StorageConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>S3StorageConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3StorageConfig} obj Optional instance to populate.
     * @return {module:model/S3StorageConfig} The populated <code>S3StorageConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3StorageConfig();

            if (data.hasOwnProperty('aws_access_key')) {
                obj['aws_access_key'] = ApiClient.convertToType(data['aws_access_key'], 'String');
            }
            if (data.hasOwnProperty('aws_secret_access_key')) {
                obj['aws_secret_access_key'] = ApiClient.convertToType(data['aws_secret_access_key'], 'String');
            }
            if (data.hasOwnProperty('bucket_name')) {
                obj['bucket_name'] = ApiClient.convertToType(data['bucket_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3StorageConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3StorageConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aws_access_key'] && !(typeof data['aws_access_key'] === 'string' || data['aws_access_key'] instanceof String)) {
            throw new Error("Expected the field `aws_access_key` to be a primitive type in the JSON string but got " + data['aws_access_key']);
        }
        // ensure the json data is a string
        if (data['aws_secret_access_key'] && !(typeof data['aws_secret_access_key'] === 'string' || data['aws_secret_access_key'] instanceof String)) {
            throw new Error("Expected the field `aws_secret_access_key` to be a primitive type in the JSON string but got " + data['aws_secret_access_key']);
        }
        // ensure the json data is a string
        if (data['bucket_name'] && !(typeof data['bucket_name'] === 'string' || data['bucket_name'] instanceof String)) {
            throw new Error("Expected the field `bucket_name` to be a primitive type in the JSON string but got " + data['bucket_name']);
        }

        return true;
    }


}



/**
 * AWS access key.
 * @member {String} aws_access_key
 */
S3StorageConfig.prototype['aws_access_key'] = undefined;

/**
 * AWS secret access key.
 * @member {String} aws_secret_access_key
 */
S3StorageConfig.prototype['aws_secret_access_key'] = undefined;

/**
 * Name of bucket.
 * @member {String} bucket_name
 */
S3StorageConfig.prototype['bucket_name'] = undefined;






export default S3StorageConfig;

