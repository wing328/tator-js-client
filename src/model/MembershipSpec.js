/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MembershipSpec model module.
 * @module model/MembershipSpec
 * @version 0.0.5
 */
class MembershipSpec {
    /**
     * Constructs a new <code>MembershipSpec</code>.
     * @alias module:model/MembershipSpec
     * @param user {Number} Unique integer identifying a user.
     * @param permission {module:model/MembershipSpec.PermissionEnum} User permission level for the project.
     */
    constructor(user, permission) { 
        
        MembershipSpec.initialize(this, user, permission);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, user, permission) { 
        obj['user'] = user;
        obj['permission'] = permission;
    }

    /**
     * Constructs a <code>MembershipSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MembershipSpec} obj Optional instance to populate.
     * @return {module:model/MembershipSpec} The populated <code>MembershipSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MembershipSpec();

            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'Number');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], 'String');
            }
            if (data.hasOwnProperty('default_version')) {
                obj['default_version'] = ApiClient.convertToType(data['default_version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MembershipSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MembershipSpec</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MembershipSpec.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['permission'] && !(typeof data['permission'] === 'string' || data['permission'] instanceof String)) {
            throw new Error("Expected the field `permission` to be a primitive type in the JSON string but got " + data['permission']);
        }

        return true;
    }


}

MembershipSpec.RequiredProperties = ["user", "permission"];

/**
 * Unique integer identifying a user.
 * @member {Number} user
 */
MembershipSpec.prototype['user'] = undefined;

/**
 * User permission level for the project.
 * @member {module:model/MembershipSpec.PermissionEnum} permission
 */
MembershipSpec.prototype['permission'] = undefined;

/**
 * Unique integer identifying a version.
 * @member {Number} default_version
 */
MembershipSpec.prototype['default_version'] = undefined;





/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
MembershipSpec['PermissionEnum'] = {

    /**
     * value: "View Only"
     * @const
     */
    "View Only": "View Only",

    /**
     * value: "Can Edit"
     * @const
     */
    "Can Edit": "Can Edit",

    /**
     * value: "Can Transfer"
     * @const
     */
    "Can Transfer": "Can Transfer",

    /**
     * value: "Can Execute"
     * @const
     */
    "Can Execute": "Can Execute",

    /**
     * value: "Full Control"
     * @const
     */
    "Full Control": "Full Control"
};



export default MembershipSpec;

