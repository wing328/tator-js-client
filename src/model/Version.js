/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Version model module.
 * @module model/Version
 * @version 0.0.5
 */
class Version {
    /**
     * Constructs a new <code>Version</code>.
     * Version object.
     * @alias module:model/Version
     */
    constructor() { 
        
        Version.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Version</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Version} obj Optional instance to populate.
     * @return {module:model/Version} The populated <code>Version</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Version();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('show_empty')) {
                obj['show_empty'] = ApiClient.convertToType(data['show_empty'], 'Boolean');
            }
            if (data.hasOwnProperty('bases')) {
                obj['bases'] = ApiClient.convertToType(data['bases'], ['Number']);
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Version</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Version</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bases'])) {
            throw new Error("Expected the field `bases` to be an array in the JSON data but got " + data['bases']);
        }
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }

        return true;
    }


}



/**
 * Unique integer identifying a membership.
 * @member {Number} id
 */
Version.prototype['id'] = undefined;

/**
 * Name of the version.
 * @member {String} name
 */
Version.prototype['name'] = undefined;

/**
 * Description of the version.
 * @member {String} description
 * @default ''
 */
Version.prototype['description'] = '';

/**
 * Whether to show this version on media for which no annotations exist.
 * @member {Boolean} show_empty
 * @default true
 */
Version.prototype['show_empty'] = true;

/**
 * Array of other version IDs that are dependencies of this version.
 * @member {Array.<Number>} bases
 */
Version.prototype['bases'] = undefined;

/**
 * Version number.
 * @member {Number} number
 */
Version.prototype['number'] = undefined;

/**
 * Unique integer identifying a project.
 * @member {Number} project
 */
Version.prototype['project'] = undefined;

/**
 * Name of user who created the last unmodified annotation in this version.
 * @member {String} created_by
 */
Version.prototype['created_by'] = undefined;






export default Version;

