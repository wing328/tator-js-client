/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChangeLogDescriptionOfChange from './ChangeLogDescriptionOfChange';

/**
 * The ChangeLog model module.
 * @module model/ChangeLog
 * @version 0.0.5
 */
class ChangeLog {
    /**
     * Constructs a new <code>ChangeLog</code>.
     * @alias module:model/ChangeLog
     */
    constructor() { 
        
        ChangeLog.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChangeLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangeLog} obj Optional instance to populate.
     * @return {module:model/ChangeLog} The populated <code>ChangeLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangeLog();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'Number');
            }
            if (data.hasOwnProperty('modified_datetime')) {
                obj['modified_datetime'] = ApiClient.convertToType(data['modified_datetime'], 'Date');
            }
            if (data.hasOwnProperty('description_of_change')) {
                obj['description_of_change'] = ChangeLogDescriptionOfChange.constructFromObject(data['description_of_change']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChangeLog</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChangeLog</code>.
     */
    static validateJSON(data) {
        // validate the optional field `description_of_change`
        if (data['description_of_change']) { // data not null
          ChangeLogDescriptionOfChange.validateJSON(data['description_of_change']);
        }

        return true;
    }


}



/**
 * Unique integer identifying this change log.
 * @member {Number} id
 */
ChangeLog.prototype['id'] = undefined;

/**
 * Unique integer identifying project of this change log.
 * @member {Number} project
 */
ChangeLog.prototype['project'] = undefined;

/**
 * Datetime this change occurred.
 * @member {Date} modified_datetime
 */
ChangeLog.prototype['modified_datetime'] = undefined;

/**
 * @member {module:model/ChangeLogDescriptionOfChange} description_of_change
 */
ChangeLog.prototype['description_of_change'] = undefined;

/**
 * Unique integer identifying the user whose changes created this change log.
 * @member {Number} user
 */
ChangeLog.prototype['user'] = undefined;






export default ChangeLog;

