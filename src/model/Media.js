/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttributeValue from './AttributeValue';
import MediaFiles from './MediaFiles';

/**
 * The Media model module.
 * @module model/Media
 * @version 0.0.5
 */
class Media {
    /**
     * Constructs a new <code>Media</code>.
     * @alias module:model/Media
     */
    constructor() { 
        
        Media.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Media</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Media} obj Optional instance to populate.
     * @return {module:model/Media} The populated <code>Media</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Media();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('media_files')) {
                obj['media_files'] = MediaFiles.constructFromObject(data['media_files']);
            }
            if (data.hasOwnProperty('last_edit_start')) {
                obj['last_edit_start'] = ApiClient.convertToType(data['last_edit_start'], 'Date');
            }
            if (data.hasOwnProperty('last_edit_end')) {
                obj['last_edit_end'] = ApiClient.convertToType(data['last_edit_end'], 'Date');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': AttributeValue});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'Number');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = ApiClient.convertToType(data['meta'], 'Number');
            }
            if (data.hasOwnProperty('created_datetime')) {
                obj['created_datetime'] = ApiClient.convertToType(data['created_datetime'], 'String');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'Number');
            }
            if (data.hasOwnProperty('modified_datetime')) {
                obj['modified_datetime'] = ApiClient.convertToType(data['modified_datetime'], 'String');
            }
            if (data.hasOwnProperty('modified_by')) {
                obj['modified_by'] = ApiClient.convertToType(data['modified_by'], 'Number');
            }
            if (data.hasOwnProperty('md5')) {
                obj['md5'] = ApiClient.convertToType(data['md5'], 'String');
            }
            if (data.hasOwnProperty('num_frames')) {
                obj['num_frames'] = ApiClient.convertToType(data['num_frames'], 'Number');
            }
            if (data.hasOwnProperty('fps')) {
                obj['fps'] = ApiClient.convertToType(data['fps'], 'Number');
            }
            if (data.hasOwnProperty('codec')) {
                obj['codec'] = ApiClient.convertToType(data['codec'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('summaryLevel')) {
                obj['summaryLevel'] = ApiClient.convertToType(data['summaryLevel'], 'Number');
            }
            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('archive_state')) {
                obj['archive_state'] = ApiClient.convertToType(data['archive_state'], 'String');
            }
            if (data.hasOwnProperty('archive_status_date')) {
                obj['archive_status_date'] = ApiClient.convertToType(data['archive_status_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Media</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Media</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `media_files`
        if (data['media_files']) { // data not null
          MediaFiles.validateJSON(data['media_files']);
        }
        // ensure the json data is a string
        if (data['created_datetime'] && !(typeof data['created_datetime'] === 'string' || data['created_datetime'] instanceof String)) {
            throw new Error("Expected the field `created_datetime` to be a primitive type in the JSON string but got " + data['created_datetime']);
        }
        // ensure the json data is a string
        if (data['modified_datetime'] && !(typeof data['modified_datetime'] === 'string' || data['modified_datetime'] instanceof String)) {
            throw new Error("Expected the field `modified_datetime` to be a primitive type in the JSON string but got " + data['modified_datetime']);
        }
        // ensure the json data is a string
        if (data['md5'] && !(typeof data['md5'] === 'string' || data['md5'] instanceof String)) {
            throw new Error("Expected the field `md5` to be a primitive type in the JSON string but got " + data['md5']);
        }
        // ensure the json data is a string
        if (data['codec'] && !(typeof data['codec'] === 'string' || data['codec'] instanceof String)) {
            throw new Error("Expected the field `codec` to be a primitive type in the JSON string but got " + data['codec']);
        }
        // ensure the json data is a string
        if (data['gid'] && !(typeof data['gid'] === 'string' || data['gid'] instanceof String)) {
            throw new Error("Expected the field `gid` to be a primitive type in the JSON string but got " + data['gid']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['archive_state'] && !(typeof data['archive_state'] === 'string' || data['archive_state'] instanceof String)) {
            throw new Error("Expected the field `archive_state` to be a primitive type in the JSON string but got " + data['archive_state']);
        }

        return true;
    }


}



/**
 * Name of the media.
 * @member {String} name
 */
Media.prototype['name'] = undefined;

/**
 * @member {module:model/MediaFiles} media_files
 */
Media.prototype['media_files'] = undefined;

/**
 * Datetime of the start of the session when this media or its annotations were last edited.
 * @member {Date} last_edit_start
 */
Media.prototype['last_edit_start'] = undefined;

/**
 * Datetime of the end of the session when this media or its annotations were last edited.
 * @member {Date} last_edit_end
 */
Media.prototype['last_edit_end'] = undefined;

/**
 * Object containing attribute values.
 * @member {Object.<String, module:model/AttributeValue>} attributes
 */
Media.prototype['attributes'] = undefined;

/**
 * Unique integer identifying this media.
 * @member {Number} id
 */
Media.prototype['id'] = undefined;

/**
 * Unique integer identifying project of this media.
 * @member {Number} project
 */
Media.prototype['project'] = undefined;

/**
 * Unique integer identifying entity type of this media.
 * @member {Number} meta
 */
Media.prototype['meta'] = undefined;

/**
 * Datetime when this media was created.
 * @member {String} created_datetime
 */
Media.prototype['created_datetime'] = undefined;

/**
 * Unique integer identifying user who created this media.
 * @member {Number} created_by
 */
Media.prototype['created_by'] = undefined;

/**
 * Datetime when this media was last modified.
 * @member {String} modified_datetime
 */
Media.prototype['modified_datetime'] = undefined;

/**
 * Unique integer identifying user who last modified this media.
 * @member {Number} modified_by
 */
Media.prototype['modified_by'] = undefined;

/**
 * MD5 checksum of the media file.
 * @member {String} md5
 */
Media.prototype['md5'] = undefined;

/**
 * Number of frames for videos.
 * @member {Number} num_frames
 */
Media.prototype['num_frames'] = undefined;

/**
 * Frame rate for videos.
 * @member {Number} fps
 */
Media.prototype['fps'] = undefined;

/**
 * Codec for videos.
 * @member {String} codec
 */
Media.prototype['codec'] = undefined;

/**
 * Horizontal resolution in pixels.
 * @member {Number} width
 */
Media.prototype['width'] = undefined;

/**
 * Vertical resolution in pixels.
 * @member {Number} height
 */
Media.prototype['height'] = undefined;

/**
 * If supplied, this video is best summarized at this frame interval
 * @member {Number} summaryLevel
 */
Media.prototype['summaryLevel'] = undefined;

/**
 * Group ID for the upload group of this media.
 * @member {String} gid
 */
Media.prototype['gid'] = undefined;

/**
 * Unique ID for the upload of this media.
 * @member {String} uid
 */
Media.prototype['uid'] = undefined;

/**
 * The current archival state of the media.
 * @member {module:model/Media.ArchiveStateEnum} archive_state
 */
Media.prototype['archive_state'] = undefined;

/**
 * Datetime of the last change to the `archive_state` field.
 * @member {Date} archive_status_date
 */
Media.prototype['archive_status_date'] = undefined;





/**
 * Allowed values for the <code>archive_state</code> property.
 * @enum {String}
 * @readonly
 */
Media['ArchiveStateEnum'] = {

    /**
     * value: "archived"
     * @const
     */
    "archived": "archived",

    /**
     * value: "to_archive"
     * @const
     */
    "to_archive": "to_archive",

    /**
     * value: "live"
     * @const
     */
    "live": "live",

    /**
     * value: "to_live"
     * @const
     */
    "to_live": "to_live"
};



export default Media;

