/**
 * Tator REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttributeValue from './AttributeValue';

/**
 * The StateUpdate model module.
 * @module model/StateUpdate
 * @version 0.0.5
 */
class StateUpdate {
    /**
     * Constructs a new <code>StateUpdate</code>.
     * @alias module:model/StateUpdate
     */
    constructor() { 
        
        StateUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StateUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StateUpdate} obj Optional instance to populate.
     * @return {module:model/StateUpdate} The populated <code>StateUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StateUpdate();

            if (data.hasOwnProperty('frame')) {
                obj['frame'] = ApiClient.convertToType(data['frame'], 'Number');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': AttributeValue});
            }
            if (data.hasOwnProperty('localization_ids_add')) {
                obj['localization_ids_add'] = ApiClient.convertToType(data['localization_ids_add'], ['Number']);
            }
            if (data.hasOwnProperty('localization_ids_remove')) {
                obj['localization_ids_remove'] = ApiClient.convertToType(data['localization_ids_remove'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StateUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StateUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['localization_ids_add'])) {
            throw new Error("Expected the field `localization_ids_add` to be an array in the JSON data but got " + data['localization_ids_add']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['localization_ids_remove'])) {
            throw new Error("Expected the field `localization_ids_remove` to be an array in the JSON data but got " + data['localization_ids_remove']);
        }

        return true;
    }


}



/**
 * Frame number this state applies to.
 * @member {Number} frame
 */
StateUpdate.prototype['frame'] = undefined;

/**
 * Object containing attribute values.
 * @member {Object.<String, module:model/AttributeValue>} attributes
 */
StateUpdate.prototype['attributes'] = undefined;

/**
 * List of new localization IDs that this state applies to.
 * @member {Array.<Number>} localization_ids_add
 */
StateUpdate.prototype['localization_ids_add'] = undefined;

/**
 * List of new localization IDs that this state applies to.
 * @member {Array.<Number>} localization_ids_remove
 */
StateUpdate.prototype['localization_ids_remove'] = undefined;






export default StateUpdate;

